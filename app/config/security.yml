# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\UserInterface: 
            algorithm: bcrypt
            cost: 12

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        chain_provider:
            chain:
                providers: [in_memory, database]
        in_memory:
            memory: 
                users:
                    admin:
                        password: $2y$12$1mkqKNSoeGeBDhnL4oeh5uSsc7BoQ0SL/HLFfJpFWSTtM6PXOztQ2
                        roles: 'ROLE_ADMIN'
        database:
               entity:
                   class: WikiBundle:User             
            

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            provider: chain_provider
            #http_basic: ~
            # activate different ways to authenticate

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~
            form_login:
                check_path:               /login_check
                username_parameter:       username
                password_parameter:       password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
                
            logout: 
                path: /logout
                target: /
                
        test:
            pattern:   ^/test
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        
    access_control:
    # require ROLE_ADMIN for /admin*
        - { path: ^/wiki, roles: ROLE_ADMIN }
